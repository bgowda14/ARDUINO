"""
security.py

Monitors serial output from Arduino and records a video clip when motion is detected.
The recorded video is then emailed to a recipient as an attachment.

Author: Bharath Gowda
"""

import cv2
import serial
import time
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
from email.mime.text import MIMEText
from dotenv import load_dotenv
import os

# Load credentials from .env file
load_dotenv()

# === Serial Communication ===
# Connect to Arduino via serial port (update COM port as needed)
ser = serial.Serial('/dev/cu.usbmodem1301', 9600)

# === Email Configuration ===
email_user = os.getenv('EMAIL_USER')
email_password = os.getenv('EMAIL_PASSWORD')

# Recipient's phone via SMS Gateway (Google Fi in this example)
recipient_phone_number = '6232876182'
carrier_gateway = 'tmomail.net'  # For Gmail-to-SMS gateway (T-Mobile)
email_send = f'{recipient_phone_number}@{carrier_gateway}'
subject = 'Motion Detected - Video Attachment'

# === Motion Cooldown ===
cooldown_period = 10 * 60  # 10 minutes (to prevent spam)

def send_email(filename):
    """Sends an email with the given video file attached."""
    msg = MIMEMultipart()
    msg['From'] = email_user
    msg['To'] = email_send
    msg['Subject'] = subject

    body = 'Motion detected in your room. Please find the attached video.'
    msg.attach(MIMEText(body, 'plain'))

    # Attach the video file
    with open(filename, 'rb') as attachment:
        part = MIMEBase('application', 'octet-stream')
        part.set_payload(attachment.read())
        encoders.encode_base64(part)
        part.add_header('Content-Disposition', f'attachment; filename={filename}')
        msg.attach(part)

    # Send email using Gmail SMTP
    with smtplib.SMTP('smtp.gmail.com', 587) as server:
        server.starttls()
        server.login(email_user, email_password)
        server.sendmail(email_user, email_send, msg.as_string())

def capture_video(filename, duration=10):
    """Captures a video from the webcam for the specified duration (in seconds)."""
    cap = cv2.VideoCapture(0)
    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    out = cv2.VideoWriter(filename, fourcc, 20.0, (640, 480))

    start_time = time.time()
    while int(time.time() - start_time) < duration:
        ret, frame = cap.read()
        if ret:
            out.write(frame)
        else:
            break

    cap.release()
    out.release()

def main():
    """Main loop to monitor serial input and trigger video capture and email."""
    while True:
        if ser.in_waiting > 0:
            line = ser.readline().decode('utf-8').strip()
            if "motion detected" in line:
                print("Motion detected! Capturing video...")
                video_filename = 'motion_video.avi'
                capture_video(video_filename)
                print("Video captured. Sending email...")
                send_email(video_filename)
                print("Email sent! Entering cooldown period...")
                time.sleep(cooldown_period)
                print("Cooldown period ended. Resuming motion detection.")

if __name__ == "__main__":
    main()
